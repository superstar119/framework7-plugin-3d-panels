{"version":3,"sources":["framework7.3dpanels.js"],"names":["global","factory","exports","module","define","amd","Framework73dPanels","this","Panels3d","enable","panels3d","enabled","$","addClass","disable","removeClass","onLeftPanelOpen","root","children","css","-webkit-transform-origin","transform-origin","onRightPanelOpen","onPanelSwipeOpen","panel","panels3dWidth","el","offsetWidth","panels3dView","onPanelSwipe","percentage","panelWidth","$viewEl","side","transform","$el","name","params","create","app","bind","on","init","panelOpen","effect","panelSwipeOpen","panelSwipe"],"mappings":";;;;;;;;;;;CAYC,SAAUA,EAAQC,GACC,iBAAZC,SAA0C,oBAAXC,OAAyBA,OAAOD,QAAUD,IAC9D,mBAAXG,QAAyBA,OAAOC,IAAMD,OAAOH,GACnDD,EAAOM,mBAAqBL,IAH9B,CAIEM,KAAM,WAAe,aAEvB,IAAIC,GACFC,OAAQ,WACIF,KACNG,SAASC,SAAU,EADbJ,KAENK,EAAE,QAAQC,SAAS,mBAEzBC,QAAS,WACGP,KACNG,SAASC,SAAU,EADbJ,KAENK,EAAE,QAAQG,YAAY,mBAE5BC,gBAAiB,WACLT,KACDG,SAASC,SADRJ,KAENU,KAAKC,SAAS,iBAAiBC,KACjCC,2BAA4B,cAC5BC,mBAAoB,iBAGxBC,iBAAkB,WACNf,KACDG,SAASC,SADRJ,KAENU,KAAKC,SAAS,iBAAiBC,KACjCC,2BAA4B,YAC5BC,mBAAoB,eAGxBE,iBAAkB,SAA0BC,GAE1CA,EAAMC,cAAgBD,EAAME,GAAGC,YAC/BH,EAAMI,aAFIrB,KAEeU,KAAKC,SAAS,kBAEzCW,aAAc,SAAsBL,EAAOM,GACzC,IAAIC,EAAaP,EAAMC,cACnBO,EAAUR,EAAMI,aAED,SAAfJ,EAAMS,OACRD,EAAQE,UAAW,eAAkBH,EAAaD,EAAc,oBAAuB,GAAKA,EAAc,QAC1GE,EAAQb,KACNC,2BAA4B,cAC5BC,mBAAoB,gBAEtBG,EAAMW,IAAID,UAAW,gBAAmBH,GAAc,EAAID,GAAe,YAExD,UAAfN,EAAMS,OACRD,EAAQE,UAAW,gBAAmBH,EAAaD,EAAc,mBAAsB,GAAKA,EAAc,QAC1GE,EAAQb,KACNC,2BAA4B,YAC5BC,mBAAoB,cAEtBG,EAAMW,IAAID,UAAW,eAAkBH,GAAc,EAAID,GAAe,cAsD9E,OAhDEM,KAAM,WACNC,QACE3B,UACEC,SAAS,IAGb2B,OAAQ,WACN,IAAIC,EAAMhC,KAEVgC,EAAI7B,UACFC,QAAS4B,EAAIF,OAAO3B,SAASC,QAC7BF,OAAQD,EAASC,OAAO+B,KAAKD,GAC7BzB,QAASN,EAASM,QAAQ0B,KAAKD,GAC/BvB,gBAAiBR,EAASQ,gBAAgBwB,KAAKD,GAC/CjB,iBAAkBd,EAASc,iBAAiBkB,KAAKD,GACjDV,aAAcrB,EAASqB,aAAaW,KAAKD,GACzChB,iBAAkBf,EAASe,iBAAiBiB,KAAKD,KAGrDE,IACEC,KAAM,WACMnC,KACF8B,OAAO3B,SAASC,SADdJ,KAEJG,SAASD,UAGjBkC,UAAW,SAAmBnB,GAC5B,IAAIe,EAAMhC,KACLgC,EAAI7B,SAASC,SACG,WAAjBa,EAAMoB,SACS,SAAfpB,EAAMS,KAAmBM,EAAI7B,SAASM,kBACnCuB,EAAI7B,SAASY,qBAEtBuB,eAAgB,SAAwBrB,GAC5BjB,KACDG,SAASC,SACG,WAAjBa,EAAMoB,QAFArC,KAGNG,SAASa,iBAAiBC,IAEhCsB,WAAY,SAAoBtB,EAAOM,GAC3BvB,KACDG,SAASC,SACG,WAAjBa,EAAMoB,QAFArC,KAGNG,SAASmB,aAAaL,EAAOM","file":"framework7.3dpanels.min.js","sourcesContent":["/**\n * Framework7 Plugin 3D Panels 2.0.0\n * Framework7 plugin to add 3d effect for side panels\n * http://framework7.io/plugins/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 24, 2018\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Framework73dPanels = factory());\n}(this, (function () { 'use strict';\n\nvar Panels3d = {\n  enable: function enable() {\n    var app = this;\n    app.panels3d.enabled = true;\n    app.$('html').addClass('with-panels-3d');\n  },\n  disable: function disable() {\n    var app = this;\n    app.panels3d.enabled = false;\n    app.$('html').removeClass('with-panels-3d');\n  },\n  onLeftPanelOpen: function onLeftPanelOpen() {\n    var app = this;\n    if (!app.panels3d.enabled) { return; }\n    app.root.children('.views, .view').css({\n      '-webkit-transform-origin': '100% center',\n      'transform-origin': '100% center',\n    });\n  },\n  onRightPanelOpen: function onRightPanelOpen() {\n    var app = this;\n    if (!app.panels3d.enabled) { return; }\n    app.root.children('.views, .view').css({\n      '-webkit-transform-origin': '0% center',\n      'transform-origin': '0% center',\n    });\n  },\n  onPanelSwipeOpen: function onPanelSwipeOpen(panel) {\n    var app = this;\n    panel.panels3dWidth = panel.el.offsetWidth; // eslint-disable-line\n    panel.panels3dView = app.root.children('.view, .views'); // eslint-disable-line\n  },\n  onPanelSwipe: function onPanelSwipe(panel, percentage) {\n    var panelWidth = panel.panels3dWidth;\n    var $viewEl = panel.panels3dView;\n\n    if (panel.side === 'left') {\n      $viewEl.transform((\"translate3d(\" + (panelWidth * percentage) + \"px,0,0) rotateY(\" + (-30 * percentage) + \"deg)\"));\n      $viewEl.css({\n        '-webkit-transform-origin': '100% center',\n        'transform-origin': '100% center',\n      });\n      panel.$el.transform((\"translate3d(\" + (-panelWidth * (1 - percentage)) + \"px,0,0)\"));\n    }\n    if (panel.side === 'right') {\n      $viewEl.transform((\"translate3d(\" + (-panelWidth * percentage) + \"px,0,0) rotateY(\" + (30 * percentage) + \"deg)\"));\n      $viewEl.css({\n        '-webkit-transform-origin': '0% center',\n        'transform-origin': '0% center',\n      });\n      panel.$el.transform((\"translate3d(\" + (panelWidth * (1 - percentage)) + \"px,0,0)\"));\n    }\n  },\n};\n\nvar framework7_3dpanels = {\n  name: 'panels3d',\n  params: {\n    panels3d: {\n      enabled: false,\n    },\n  },\n  create: function create() {\n    var app = this;\n\n    app.panels3d = {\n      enabled: app.params.panels3d.enabled,\n      enable: Panels3d.enable.bind(app),\n      disable: Panels3d.disable.bind(app),\n      onLeftPanelOpen: Panels3d.onLeftPanelOpen.bind(app),\n      onRightPanelOpen: Panels3d.onRightPanelOpen.bind(app),\n      onPanelSwipe: Panels3d.onPanelSwipe.bind(app),\n      onPanelSwipeOpen: Panels3d.onPanelSwipeOpen.bind(app),\n    };\n  },\n  on: {\n    init: function init() {\n      var app = this;\n      if (app.params.panels3d.enabled) {\n        app.panels3d.enable();\n      }\n    },\n    panelOpen: function panelOpen(panel) {\n      var app = this;\n      if (!app.panels3d.enabled) { return; }\n      if (panel.effect !== 'reveal') { return; }\n      if (panel.side === 'left') { app.panels3d.onLeftPanelOpen(); }\n      else { app.panels3d.onRightPanelOpen(); }\n    },\n    panelSwipeOpen: function panelSwipeOpen(panel) {\n      var app = this;\n      if (!app.panels3d.enabled) { return; }\n      if (panel.effect !== 'reveal') { return; }\n      app.panels3d.onPanelSwipeOpen(panel);\n    },\n    panelSwipe: function panelSwipe(panel, percentage) {\n      var app = this;\n      if (!app.panels3d.enabled) { return; }\n      if (panel.effect !== 'reveal') { return; }\n      app.panels3d.onPanelSwipe(panel, percentage);\n    },\n  },\n};\n\nreturn framework7_3dpanels;\n\n})));\n"]}